{
  "address": "0x2F9d9302526f0e62EEf2CB3D172C85D08a223232",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xf2f739da3a28728a266a3431261187b531ed591e6022e750c53e6ae570caefcf",
  "receipt": {
    "to": null,
    "from": "0xD2DD548CA069346aeA23d9f43f991ac2C654baE0",
    "contractAddress": "0x2F9d9302526f0e62EEf2CB3D172C85D08a223232",
    "transactionIndex": 12,
    "gasUsed": "1045343",
    "logsBloom": "0x
    "blockHash": "0x26e39ff703bd2bead0a5564c87f2fd28460f6ff44415fd31de02f2271c37dd93",
    "transactionHash": "0xf2f739da3a28728a266a3431261187b531ed591e6022e750c53e6ae570caefcf",
    "logs": [],
    "blockNumber": 10776511,
    "cumulativeGasUsed": "3481807",
    "status": 1,
    "byzantium": true
  },
  "args": ["0x8a753747a1fa494ec906ce90e9f37563a8af630e"],
  "numDeployments": 2,
  "solcInputHash": "2b9b5903de5e453378c222ce358a14e5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Yves Tscherry\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A super simple contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Just a demo...\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport '@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol';\\nimport './PriceConverter.sol';\\n\\nerror FundMe__NotOwner();\\n\\n/**\\n * @title A super simple contract for crowd funding\\n * @author Yves Tscherry\\n * @notice Just a demo...\\n */\\ncontract FundMe {\\n  using PriceConverter for uint256;\\n\\n  mapping(address => uint256) private s_addressToAmountFunded;\\n  address[] private s_funders;\\n\\n  address private immutable i_owner;\\n  uint256 public constant MINIMUM_USD = 50 * 10**18;\\n\\n  AggregatorV3Interface private s_priceFeed;\\n\\n  modifier onlyOwner() {\\n    // require(msg.sender == owner);\\n    if (msg.sender != i_owner) revert FundMe__NotOwner();\\n    _;\\n  }\\n\\n  constructor(address priceFeedAddress) {\\n    i_owner = msg.sender;\\n    s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n  }\\n\\n  receive() external payable {\\n    fund();\\n  }\\n\\n  fallback() external payable {\\n    fund();\\n  }\\n\\n  function fund() public payable {\\n    require(\\n      msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n      'You need to spend more ETH!'\\n    );\\n    s_addressToAmountFunded[msg.sender] += msg.value;\\n    s_funders.push(msg.sender);\\n  }\\n\\n  function withdraw() public payable onlyOwner {\\n    for (\\n      uint256 funderIndex = 0;\\n      funderIndex < s_funders.length;\\n      funderIndex++\\n    ) {\\n      address funder = s_funders[funderIndex];\\n      s_addressToAmountFunded[funder] = 0;\\n    }\\n    s_funders = new address[](0);\\n    // // transfer\\n    // payable(msg.sender).transfer(address(this).balance);\\n    // // send\\n    // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n    // require(sendSuccess, \\\"Send failed\\\");\\n    // call\\n    (bool callSuccess, ) = payable(msg.sender).call{\\n      value: address(this).balance\\n    }('');\\n    require(callSuccess, 'Call failed');\\n  }\\n\\n  function cheaperWithdraw() public payable onlyOwner {\\n    address[] memory funders = s_funders;\\n    for (uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++) {\\n      address funder = funders[funderIndex];\\n      s_addressToAmountFunded[funder] = 0;\\n    }\\n    s_funders = new address[](0);\\n    (bool callSuccess, ) = i_owner.call{value: address(this).balance}('');\\n    require(callSuccess, 'Call failed');\\n  }\\n\\n  // note about receive and fallback function\\n  // Explainer from: https://solidity-by-example.org/fallback/\\n  // Ether is sent to contract\\n  //      is msg.data empty?\\n  //          /   \\\\\\n  //         yes  no\\n  //         /     \\\\\\n  //    receive()?  fallback()\\n  //     /   \\\\\\n  //   yes   no\\n  //  /        \\\\\\n  //receive()  fallback()\\n\\n  function getOwner() public view returns (address) {\\n    return i_owner;\\n  }\\n\\n  function getFunders(uint256 index) public view returns (address) {\\n    return s_funders[index];\\n  }\\n\\n  function getAddressToAmountFunded(address funder)\\n    public\\n    view\\n    returns (uint256)\\n  {\\n    return s_addressToAmountFunded[funder];\\n  }\\n\\n  function getPriceFeed() public view returns (AggregatorV3Interface) {\\n    return s_priceFeed;\\n  }\\n}\\n\",\"keccak256\":\"0x191023502e99712f655c0808a478395855ab2d5b42aaf4463c7ae7d8e8729b1c\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport '@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol';\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n  // we could maket this public, but then we'd have to deploy it\\n  function getPrice(AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    (, int256 answer, , , ) = priceFeed.latestRoundData();\\n    // ETH/USD rate in 18 digit\\n    return uint256(answer * 10000000000);\\n  }\\n\\n  // 1000000000\\n  function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    uint256 ethPrice = getPrice(priceFeed);\\n    uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n    // the actual ETH/USD conversation rate, after adjusting the extra 0s.\\n    return ethAmountInUsd;\\n  }\\n}\\n\",\"keccak256\":\"0x9bb78642bc5497b2282d21ae916919ec570b483537d9fe0c4fd65fed8c0da5d9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200131238038062001312833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c61118c620001866000396000818161037d015281816105cc0152818161061c0152610812015261118c6000f3fe60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101475780639e87a5cd14610172578063b60d42881461019d578063be2693f0146101a75761008e565b80630343fb25146100985780633a7b6c74146100d55780633ccfd60b146101125780636b69a5921461011c5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610ac4565b6102eb565b6040516100cc9190610b0a565b60405180910390f35b3480156100e157600080fd5b506100fc60048036038101906100f79190610b51565b610333565b6040516101099190610b8d565b60405180910390f35b61011a61037b565b005b34801561012857600080fd5b506101316105bb565b60405161013e9190610b0a565b60405180910390f35b34801561015357600080fd5b5061015c6105c8565b6040516101699190610b8d565b60405180910390f35b34801561017e57600080fd5b506101876105f0565b6040516101949190610c07565b60405180910390f35b6101a56101b1565b005b6101af61061a565b005b6802b5e3af16b18800006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108de90919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610c7f565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027f9190610cce565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006001828154811061034957610348610d24565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610400576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104ab5760006001828154811061042657610425610d24565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104a390610d53565b915050610403565b50600067ffffffffffffffff8111156104c7576104c6610d9c565b5b6040519080825280602002602001820160405280156104f55781602001602082028036833780820191505090505b506001908051906020019061050b9291906109ba565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161053290610dfc565b60006040518083038185875af1925050503d806000811461056f576040519150601f19603f3d011682016040523d82523d6000602084013e610574565b606091505b50509050806105b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105af90610e5d565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461069f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561072357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106d9575b5050505050905060005b81518110156107ad57600082828151811061074b5761074a610d24565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107a590610d53565b91505061072d565b50600067ffffffffffffffff8111156107c9576107c8610d9c565b5b6040519080825280602002602001820160405280156107f75781602001602082028036833780820191505090505b506001908051906020019061080d9291906109ba565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161085490610dfc565b60006040518083038185875af1925050503d8060008114610891576040519150601f19603f3d011682016040523d82523d6000602084013e610896565b606091505b50509050806108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190610e5d565b60405180910390fd5b5050565b6000806108ea8361091a565b90506000670de0b6b3a764000085836109039190610e7d565b61090d9190610f06565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561096357600080fd5b505afa158015610977573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099b9190610fc4565b5050509150506402540be400816109b2919061103f565b915050919050565b828054828255906000526020600020908101928215610a33579160200282015b82811115610a325782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109da565b5b509050610a409190610a44565b5090565b5b80821115610a5d576000816000905550600101610a45565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9182610a66565b9050919050565b610aa181610a86565b8114610aac57600080fd5b50565b600081359050610abe81610a98565b92915050565b600060208284031215610ada57610ad9610a61565b5b6000610ae884828501610aaf565b91505092915050565b6000819050919050565b610b0481610af1565b82525050565b6000602082019050610b1f6000830184610afb565b92915050565b610b2e81610af1565b8114610b3957600080fd5b50565b600081359050610b4b81610b25565b92915050565b600060208284031215610b6757610b66610a61565b5b6000610b7584828501610b3c565b91505092915050565b610b8781610a86565b82525050565b6000602082019050610ba26000830184610b7e565b92915050565b6000819050919050565b6000610bcd610bc8610bc384610a66565b610ba8565b610a66565b9050919050565b6000610bdf82610bb2565b9050919050565b6000610bf182610bd4565b9050919050565b610c0181610be6565b82525050565b6000602082019050610c1c6000830184610bf8565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c69601b83610c22565b9150610c7482610c33565b602082019050919050565b60006020820190508181036000830152610c9881610c5c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cd982610af1565b9150610ce483610af1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d1957610d18610c9f565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d5e82610af1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d9157610d90610c9f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610de6600083610dcb565b9150610df182610dd6565b600082019050919050565b6000610e0782610dd9565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e47600b83610c22565b9150610e5282610e11565b602082019050919050565b60006020820190508181036000830152610e7681610e3a565b9050919050565b6000610e8882610af1565b9150610e9383610af1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ecc57610ecb610c9f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f1182610af1565b9150610f1c83610af1565b925082610f2c57610f2b610ed7565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f5681610f37565b8114610f6157600080fd5b50565b600081519050610f7381610f4d565b92915050565b6000819050919050565b610f8c81610f79565b8114610f9757600080fd5b50565b600081519050610fa981610f83565b92915050565b600081519050610fbe81610b25565b92915050565b600080600080600060a08688031215610fe057610fdf610a61565b5b6000610fee88828901610f64565b9550506020610fff88828901610f9a565b945050604061101088828901610faf565b935050606061102188828901610faf565b925050608061103288828901610f64565b9150509295509295909350565b600061104a82610f79565b915061105583610f79565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561109457611093610c9f565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110d1576110d0610c9f565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561110e5761110d610c9f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561114b5761114a610c9f565b5b82820290509291505056fea2646970667358221220e9b667d363d1c98f706ae3aa65ee68a0240b37e5259cc63d33710f1a9c69473364736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101475780639e87a5cd14610172578063b60d42881461019d578063be2693f0146101a75761008e565b80630343fb25146100985780633a7b6c74146100d55780633ccfd60b146101125780636b69a5921461011c5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610ac4565b6102eb565b6040516100cc9190610b0a565b60405180910390f35b3480156100e157600080fd5b506100fc60048036038101906100f79190610b51565b610333565b6040516101099190610b8d565b60405180910390f35b61011a61037b565b005b34801561012857600080fd5b506101316105bb565b60405161013e9190610b0a565b60405180910390f35b34801561015357600080fd5b5061015c6105c8565b6040516101699190610b8d565b60405180910390f35b34801561017e57600080fd5b506101876105f0565b6040516101949190610c07565b60405180910390f35b6101a56101b1565b005b6101af61061a565b005b6802b5e3af16b18800006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108de90919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610c7f565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027f9190610cce565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006001828154811061034957610348610d24565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610400576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104ab5760006001828154811061042657610425610d24565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104a390610d53565b915050610403565b50600067ffffffffffffffff8111156104c7576104c6610d9c565b5b6040519080825280602002602001820160405280156104f55781602001602082028036833780820191505090505b506001908051906020019061050b9291906109ba565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161053290610dfc565b60006040518083038185875af1925050503d806000811461056f576040519150601f19603f3d011682016040523d82523d6000602084013e610574565b606091505b50509050806105b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105af90610e5d565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461069f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561072357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106d9575b5050505050905060005b81518110156107ad57600082828151811061074b5761074a610d24565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107a590610d53565b91505061072d565b50600067ffffffffffffffff8111156107c9576107c8610d9c565b5b6040519080825280602002602001820160405280156107f75781602001602082028036833780820191505090505b506001908051906020019061080d9291906109ba565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161085490610dfc565b60006040518083038185875af1925050503d8060008114610891576040519150601f19603f3d011682016040523d82523d6000602084013e610896565b606091505b50509050806108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190610e5d565b60405180910390fd5b5050565b6000806108ea8361091a565b90506000670de0b6b3a764000085836109039190610e7d565b61090d9190610f06565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561096357600080fd5b505afa158015610977573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099b9190610fc4565b5050509150506402540be400816109b2919061103f565b915050919050565b828054828255906000526020600020908101928215610a33579160200282015b82811115610a325782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109da565b5b509050610a409190610a44565b5090565b5b80821115610a5d576000816000905550600101610a45565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9182610a66565b9050919050565b610aa181610a86565b8114610aac57600080fd5b50565b600081359050610abe81610a98565b92915050565b600060208284031215610ada57610ad9610a61565b5b6000610ae884828501610aaf565b91505092915050565b6000819050919050565b610b0481610af1565b82525050565b6000602082019050610b1f6000830184610afb565b92915050565b610b2e81610af1565b8114610b3957600080fd5b50565b600081359050610b4b81610b25565b92915050565b600060208284031215610b6757610b66610a61565b5b6000610b7584828501610b3c565b91505092915050565b610b8781610a86565b82525050565b6000602082019050610ba26000830184610b7e565b92915050565b6000819050919050565b6000610bcd610bc8610bc384610a66565b610ba8565b610a66565b9050919050565b6000610bdf82610bb2565b9050919050565b6000610bf182610bd4565b9050919050565b610c0181610be6565b82525050565b6000602082019050610c1c6000830184610bf8565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c69601b83610c22565b9150610c7482610c33565b602082019050919050565b60006020820190508181036000830152610c9881610c5c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cd982610af1565b9150610ce483610af1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d1957610d18610c9f565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d5e82610af1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d9157610d90610c9f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610de6600083610dcb565b9150610df182610dd6565b600082019050919050565b6000610e0782610dd9565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e47600b83610c22565b9150610e5282610e11565b602082019050919050565b60006020820190508181036000830152610e7681610e3a565b9050919050565b6000610e8882610af1565b9150610e9383610af1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ecc57610ecb610c9f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f1182610af1565b9150610f1c83610af1565b925082610f2c57610f2b610ed7565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f5681610f37565b8114610f6157600080fd5b50565b600081519050610f7381610f4d565b92915050565b6000819050919050565b610f8c81610f79565b8114610f9757600080fd5b50565b600081519050610fa981610f83565b92915050565b600081519050610fbe81610b25565b92915050565b600080600080600060a08688031215610fe057610fdf610a61565b5b6000610fee88828901610f64565b9550506020610fff88828901610f9a565b945050604061101088828901610faf565b935050606061102188828901610faf565b925050608061103288828901610f64565b9150509295509295909350565b600061104a82610f79565b915061105583610f79565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561109457611093610c9f565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110d1576110d0610c9f565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561110e5761110d610c9f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561114b5761114a610c9f565b5b82820290509291505056fea2646970667358221220e9b667d363d1c98f706ae3aa65ee68a0240b37e5259cc63d33710f1a9c69473364736f6c63430008080033",
  "devdoc": {
    "author": "Yves Tscherry",
    "kind": "dev",
    "methods": {},
    "title": "A super simple contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Just a demo...",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
